{"version":3,"sources":["img/error.svg","img/logoMSND.svg","redux/searchParams/actions.js","redux/searchParams/reducers.js","redux/lists/actions.js","redux/lists/reducers.js","redux/pageParams/actions.js","redux/pageParams/reducers.js","redux/reducers.js","components/navBar/name/index.js","components/navBar/year/index.js","components/navBar/sort/index.js","components/navBar/genres/index.js","APIs/getMovieAPI.js","components/helpFun/getMovie.js","APIs/getDataOMDB.js","components/helpFun/getOMDB.js","APIs/getSimilarMovieAPI.js","components/helpFun/getSimilar.js","components/helpFun/index.js","components/navBar/navBar.jsx","APIs/getGenres.js","components/navBar/index.js","components/items/pagination.jsx","components/items/similar.jsx","components/items/videoPlayeer.jsx","components/items/movieInfo.jsx","components/items/movie.jsx","components/helpFun/conditionImg.js","components/items/listMovies.jsx","components/items/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","setTitleAction","title","type","payload","setYearAction","year","setGenreAction","genre","setPageAction","page","setSortAction","sort","setLoadStatusAction","status","defaultState","setMoviesAction","movies","setMoviesCopyAction","moviesCopy","genres","setCurrentPageListAction","currentPageList","moviesPerPage","combineReducers","searchParams","state","action","lists","pageParams","NavBarName","name","onKeyPress","this","props","onSearchClick","placeholder","ref","movieTitleRef","React","Component","NavBarYears","className","htmlFor","onChange","getValueYears","onSearchClickYears","max","min","NavBarSort","onChooseInput","value","NavBarGenres","onChooseGenre","map","slug","key","getListOfMovies","currentPage","a","params","query","years","limit","extended","axios","get","headers","result","data","getMovie","window","scrollTo","top","behavior","getDataOMDB","id","getPicturesAndRate","rate","item","movie","ids","imdb","push","getSimilarMovies","results","getSimilar","sim","tmdb","getAndBuildAllData","resultOMDB","i","resultSimilar","listWithMovieConstructor","movieConstructor","trailer","poster","Poster","slice","country","Country","rateIMDB","imdbRating","rateOthers","Ratings","similar","NavBar","createRef","titleValue","current","currentGenre","resultConstructor","e","which","searching","valueLength","parseInt","target","length","style","color","moviesForSorting","sortMethod","b","reverse","onEnterClick","onClick","onButtonClick","getGenresMovie","NavBarContainer","setGenresListAction","getAndSaveGenresList","mapDispatchToProps","connect","Pagination","pageNumbers","direction","next","index","pageListUpdate","prev","paginate","paginationControl","console","log","preventDefault","pagePrev","pageNext","Similar","searchingSimilar","VideoPlayeer","preloaderRef","customModalWindowRef","overlayRef","setTimeout","opacity","visibility","display","childNodes","src","openYoutubePlayeer","onLoad","preloader","conditionClassName","conditionUrl","alt","closeButton","width","height","frameBorder","allowFullScreen","MovieInfo","rateVerified","Source","Value","Movie","film","url","error","conditionImg","ListMovies","MovieContainer","pageNumber","logo","store","createStore","rootReducer","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67e809b4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.533ab57e.svg\";","module.exports = __webpack_public_path__ + \"static/media/logoMSND.7fc557fe.svg\";","export const SAVE_TITLE_STATE = 'SAVE_TITLE_STATE';\nexport const SAVE_YEAR_STATE = 'SAVE_YEAR_STATE';\nexport const SAVE_GENRE_STATE = 'SAVE_GENRE_STATE';\nexport const SAVE_PAGE_STATE = 'SAVE_PAGE_STATE';\nexport const SAVE_SORT_STATE = 'SAVE_SORT_STATE';\nexport const SAVE_LOAD_STATUS_STATE = 'SAVE_LOAD_STATUS_STATE';\n\n\nexport const setTitleAction = (title)=>({\n    type: SAVE_TITLE_STATE,\n    payload: title,\n})\nexport const setYearAction = (year)=>({\n    type: SAVE_YEAR_STATE,\n    payload: year,\n})\nexport const setGenreAction = (genre)=>({\n    type: SAVE_GENRE_STATE,\n    payload: genre,\n})\nexport const setPageAction = (page)=>({\n    type: SAVE_PAGE_STATE,\n    payload: page,\n})\nexport const setSortAction = (sort)=>({\n    type: SAVE_SORT_STATE,\n    payload: sort,\n})\nexport const setLoadStatusAction = (status)=>({\n    type: SAVE_LOAD_STATUS_STATE,\n    payload: status,\n})\n","/* eslint-disable default-case */\nimport { \n    SAVE_TITLE_STATE,\n    SAVE_YEAR_STATE,\n    SAVE_GENRE_STATE,\n    SAVE_PAGE_STATE,\n    SAVE_SORT_STATE,\n    SAVE_LOAD_STATUS_STATE\n                            } from './actions'\n\nconst defaultState = {\n    title: '',\n    year:'',\n    genre:'',\n    page: 1,\n    sort:'',\n    status: true, //True = load finish, false = load in process\n}\n\nexport const updateSearchParamsReducers = (state = defaultState, action)=>{\n    switch( action.type ){\n        case SAVE_TITLE_STATE:\n            return {\n                ...state,\n                title: action.payload,\n            }\n        case SAVE_YEAR_STATE:\n            return {\n                ...state,\n                year: action.payload,\n            }\n        case SAVE_GENRE_STATE:\n            return {\n                ...state,\n                genre: action.payload,\n            }\n        case SAVE_PAGE_STATE:\n            return {\n                ...state,\n                page: action.payload,\n            }\n        case SAVE_SORT_STATE:\n            return {\n                ...state,\n                sort: action.payload,\n            }\n        case SAVE_LOAD_STATUS_STATE:\n            return {\n                ...state,\n                status: action.payload,\n            }\n        \n    }\n    return state;\n}\n","export const SAVE_MOVIES_STATE = 'SAVE_MOVIES_STATE';\nexport const SAVE_GENRES_LIST_STATE = 'SAVE_GENRES_LIST_STATE';\nexport const SAVE_MOVIES_COPY_STATE = 'SAVE_MOVIES_COPY_STATE';\n\n\nexport const setMoviesAction = (movies)=>({\n    type: SAVE_MOVIES_STATE,\n    payload: movies,\n})\nexport const setGenresListAction = (genres)=>({\n    type: SAVE_GENRES_LIST_STATE,\n    payload: genres,\n})\nexport const setMoviesCopyAction = (moviesCopy)=>({\n    type: SAVE_MOVIES_COPY_STATE,\n    payload: moviesCopy,\n})\n\n","/* eslint-disable default-case */\nimport { \n    SAVE_MOVIES_STATE,\n    SAVE_GENRES_LIST_STATE,\n    SAVE_MOVIES_COPY_STATE,\n                            } from './actions'\n\nconst defaultState = {\n    movies: [],\n    moviesCopy: [],\n    genres:[],\n} \n\nexport const updateListsReducers = (state = defaultState, action)=>{\n    switch( action.type ){\n        case SAVE_MOVIES_STATE:\n            return {\n                ...state,\n                movies: action.payload,\n            }\n        case SAVE_MOVIES_COPY_STATE:\n            return {\n                ...state,\n                moviesCopy: action.payload,\n            }\n        case SAVE_GENRES_LIST_STATE:\n            return {\n                ...state,\n                genres: action.payload,\n            }\n    }\n    return state;\n}\n","export const SAVE_CURRENT_PAGE_LIST_STATE = 'SAVE_CURRENT_PAGE_LIST_STATE';\n\n\nexport const setCurrentPageListAction = (currentPageList)=>({\n    type: SAVE_CURRENT_PAGE_LIST_STATE,\n    payload: currentPageList,\n})\n\n\n","/* eslint-disable default-case */\nimport { \n    SAVE_CURRENT_PAGE_LIST_STATE,\n                            } from './actions'\n\nconst defaultState = {\n    moviesPerPage: 15,\n    currentPageList: [1, 2, 3, 4, 5],\n} \n\nexport const updatePageParamsReducers = (state = defaultState, action)=>{\n    switch( action.type ){\n        case SAVE_CURRENT_PAGE_LIST_STATE:\n            return {\n                ...state,\n                currentPageList: action.payload,\n            }\n    }\n    return state;\n}\n","import { combineReducers } from 'redux';\nimport { updateSearchParamsReducers } from './searchParams/reducers';\nimport { updateListsReducers } from './lists/reducers';\nimport { updatePageParamsReducers } from './pageParams/reducers';\n\nexport default combineReducers({\n    searchParams: updateSearchParamsReducers,\n    lists: updateListsReducers,\n    pageParams: updatePageParamsReducers,\n})\n\n\n","import React from 'react';\n\nclass NavBarName extends React.Component{\n    render(){\n        return(\n            <input  type=\"text\" \n                    name=\"searchFilm\" \n                    onKeyPress={this.props.onSearchClick}\n                    placeholder=\"Movie title\"\n                    ref={this.props.movieTitleRef}\n                />\n        )\n    }\n}\n\nexport default NavBarName;","import React from 'react';\n\nclass NavBarYears extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapYearsForm\">\n                    <label htmlFor=\"years\">optional</label>\n                    <input type=\"number\"\n                        name=\"years\"\n                        placeholder=\"Choose the year\"\n                        onChange = { this.props.getValueYears }\n                        onKeyPress = { this.props.onSearchClickYears }\n                        max=\"2019\"\n                        min=\"1970\" />\n                </div>\n        )\n    }\n}\n\nexport default NavBarYears;","import React from 'react';\n\nclass NavBarSort extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapSort\">\n                <label htmlFor=\"sort\">optional</label>\n                <select name=\"sort\"\n                        onChange={this.props.onChooseInput} >\n                    <option value=\"Not sort\">Not sort</option>\n                    <option value=\"By newest\">By newest</option>\n                    <option value=\"By oldest\">By oldest</option>\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default NavBarSort;","import React from 'react';\n\nclass NavBarGenres extends React.Component{\n    render(){\n        return(\n            <div className=\"wrapSort\">\n                <label htmlFor=\"genres\">optional</label>\n                <select name=\"genres\"\n                        onChange={this.props.onChooseGenre} >\n                    <option value=\"default\">Choose the genre</option>\n                    {this.props.genres.map((genre)=>{\n                        return <option value={genre.slug} \n                                       key={genre.slug}> {genre.name} </option>\n                    })}\n                </select>\n            </div>\n        )\n    }\n}\n\nexport default NavBarGenres;","import axios from 'axios';\n\n\nexport async function getListOfMovies(name, year, genres, currentPage){\n    let params = {\n            query: `${name}`,\n            years: year ? `${year}` : '',\n            genres: genres ? `${genres}` : '',\n            limit: 15,\n            page: currentPage,\n            extended: 'full',\n    };\n    const result = await axios.get('https://api.trakt.tv/search/movie/',{\n    params: params,\n    headers:{\n        \"trakt-api-key\": \"f50bcef04ebc3c6fea696a2573403d0a06b8b22ebc44ebb002f93572418bef46\",\n        \"Content-type\": \"application/json\",\n        \"trakt-api-version\": 2,\n    }\n});\nreturn result.data;\n}\n\n","import { getListOfMovies } from '../../APIs/getMovieAPI'; //Link to API\n\n\nexport async function getMovie(title, years, genre, page){\n    //Code save data in state (List of MOVIE)\n    const result = await getListOfMovies( title, years, genre, page );\n    window.scrollTo({\n        top:0,\n        behavior:'smooth',\n    });\n    return result;\n}","import axios from 'axios';\n\nexport async function getDataOMDB(id){\n    let result = {};\n    try{\n        result = await axios.get(`http://www.omdbapi.com/?i=${id}&apikey=257284e6`);\n        if(result){\n            return result.data;\n        }\n    }catch(e){\n        // console.error(e)\n    }\n     return result;\n}\n","import { getDataOMDB } from '../../APIs/getDataOMDB';\n\nexport async function getPicturesAndRate (result){\n    const rate = []\n    for(let item of result){\n        rate.push( await getDataOMDB( item.movie.ids.imdb ));\n    }\n    return rate;\n}","import axios from 'axios';\n\n\nexport async function getSimilarMovies(id){\n    let result = [];\n    try{\n        result = await axios.get(\n            `https://api.themoviedb.org/3/movie/${id}/similar?api_key=ee05a415e10d527c5496fb485215ff75&page=1`\n        );\n        if(result){\n            return result.data.results;\n        }\n    }catch(e){\n        // console.error(e)\n    }\n     return result;\n}\n","import { getSimilarMovies } from '../../APIs/getSimilarMovieAPI';\n\nexport async function getSimilar (result){\n    const sim = []\n    for(let item of result){\n        sim.push( await getSimilarMovies( item.movie.ids.tmdb ));\n    }\n    return sim;\n}","import { getMovie } from './getMovie'\nimport { getPicturesAndRate } from './getOMDB';\nimport { getSimilar } from './getSimilar';\n\n\n\n\nexport async function getAndBuildAllData(title, year, genre, page){\n    const result = await getMovie(title, year, genre, page)\n\n    const resultOMDB = await getPicturesAndRate(result);\n\n    const resultSimilar = await getSimilar(result);\n\n    const  listWithMovieConstructor = [];\n\n    for(let i in result){\n        const movieConstructor = {\n            title: result[i].movie.title,\n            year: result[i].movie.year,\n            trailer: result[i].movie.trailer,\n            poster: resultOMDB[i].Poster ? resultOMDB[i].Poster.slice(0, -7) + '720.jpg' : '',\n            country: resultOMDB[i].Country,\n            rateIMDB: resultOMDB[i].imdbRating,\n            rateOthers: resultOMDB[i].Ratings,\n            similar: [\n                resultSimilar[i][0],\n                resultSimilar[i][1],\n                resultSimilar[i][2],\n            ]\n        };\n        listWithMovieConstructor.push(movieConstructor);\n    }\n\n    return listWithMovieConstructor;\n}","import React from 'react';\nimport NavBarName from './name';\nimport NavBarYears from './year';\nimport NavBarSort from './sort';\nimport NavBarGenres from './genres'\nimport { getAndBuildAllData } from '../helpFun'\n\n\nclass NavBar extends React.Component{\n    constructor(props){\n        super(props)\n        this.movieTitleRef = React.createRef();\n    }\n//---------------------------------------MAIN function-------------------------------------\nasync searching(){\n    this.props.state.setLoadStatusAction(false);\n    this.props.state.setPageAction(1);\n    this.props.state.setCurrentPageListAction([1,2,3,4,5])\n    const titleValue = this.movieTitleRef.current.value;\n    await this.props.state.setTitleAction(titleValue);\n\n    const {title, year, currentGenre, page} = this.props.state;\n    const resultConstructor = await getAndBuildAllData( title, year, currentGenre, page );\n    this.props.state.setMoviesAction(resultConstructor);\n    this.props.state.setLoadStatusAction(true);\n}\nonEnterClick(e){\n    if( e.which === 13 ){\n        this.searching();\n    }\n}\nonButtonClick(){\n    this.searching();\n}\n\n\nasync getValueYears(e){\n    let valueLength = parseInt( e.target.value.length );\n\n    if( valueLength > 4 ){\n        e.target.style.color = '#e17055';\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength < 4 && valueLength >= 1 ){\n        e.target.style.color = '#e17055';\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 4 ){\n        e.target.style.color = '#00b894';\n        await this.props.state.setYearAction( e.target.value );\n    // eslint-disable-next-line no-cond-assign\n    }else if( valueLength === 0 ){\n        await this.props.state.setYearAction('');\n    }\n}\n\n\nasync onChooseInput(e){\n    await this.props.state.setSortAction( e.target.value );\n    const moviesForSorting = [ ...this.props.state.movies ];\n    const sortMethod = (a, b)=>{\n        //Return by oldest\n        return( a.year - b.year)\n    }\n    if(this.props.state.sort === 'Not sort'){\n        await this.props.state.setMoviesAction( this.props.state.moviesCopy );\n\n    }else if(this.props.state.sort === 'By oldest'){\n        await moviesForSorting.sort( sortMethod );\n        await this.props.state.setMoviesAction( moviesForSorting );\n\n    }else if(this.props.state.sort === 'By newest'){\n        await moviesForSorting.sort( sortMethod );\n        await this.props.state.setMoviesAction( moviesForSorting.reverse() );\n    }\n}\nasync onChooseGenre(e){\n    if(e.target.value === 'default'){\n        this.props.state.setGenreAction('');\n    }else{\n        this.props.state.setGenreAction(e.target.value)\n    }\n}\n\nrender() {\n    return(\n        <div className='setting' id=\"navBarSetting\">\n\n                <NavBarName onSearchClick={ (e)=>{ this.onEnterClick(e) }}\n                            movieTitleRef={this.movieTitleRef}/>\n\n                <NavBarYears getValueYears={ (e)=>{ this.getValueYears(e) }}\n                             onSearchClickYears={ (e)=>{ this.onEnterClick(e) }}/>\n\n                <NavBarGenres genres={this.props.state.genres}\n                              onChooseGenre={(e)=>{ this.onChooseGenre(e) }}/>\n\n                <NavBarSort onChooseInput={ (e)=>{ this.onChooseInput(e) }}/>\n\n                <button className=\"search_button\"\n                        onClick={(e)=>{this.onButtonClick(e)}}>Search</button>\n\n        </div>\n    )\n}}\nexport default NavBar;","import axios from 'axios';\n\nexport async function getGenresMovie(){\n\n    const result = await axios.get('https://api.trakt.tv/genres/movies',{\n    headers:{\n        \"trakt-api-key\": \"f50bcef04ebc3c6fea696a2573403d0a06b8b22ebc44ebb002f93572418bef46\",\n        \"Content-type\": \"application/json\",\n        \"trakt-api-version\": 2,\n    }\n});\nreturn result.data;\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport NavBar from './navBar';\nimport { getGenresMovie } from '../../APIs/getGenres';\n\n//Search Params\nimport { \n    setTitleAction,\n    setYearAction,\n    setGenreAction,\n    setSortAction,\n    setPageAction,\n    setLoadStatusAction,\n } from '../../redux/searchParams/actions';\n\n //Lists\nimport { \n    setMoviesAction,\n    setGenresListAction,\n    setMoviesCopyAction,\n } from '../../redux/lists/actions';\n import { setCurrentPageListAction } from '../../redux/pageParams/actions'\n\nclass NavBarContainer extends React.Component{\nasync getAndSaveGenresList(){\n    if(this.props.genres.length < 1){\n        const genres = await getGenresMovie();\n        this.props.setGenresListAction(genres);\n    }\n}\nrender() {\n    this.getAndSaveGenresList();\n    if(this.props.moviesCopy.length < 1){\n        this.props.setMoviesCopyAction(this.props.movies);\n    }\n    return(\n        <NavBar state = { this.props } />\n    )\n}}\nconst mapStateToProps = state =>{\n    return {\n        //Search Params\n            title: state.searchParams.title,\n            year: state.searchParams.year,\n            currentGenre: state.searchParams.genre,\n            sort: state.searchParams.sort,\n            page: state.searchParams.page,\n        //Lists\n            movies: state.lists.movies,\n            moviesCopy: state.lists.moviesCopy,\n            genres: state.lists.genres,\n        //Page Params\n    };\n};\nconst mapDispatchToProps = {\n    //Search Params\n        setTitleAction,\n        setYearAction,\n        setGenreAction,\n        setSortAction,\n        setPageAction,\n        setLoadStatusAction,\n    //Lists\n        setMoviesAction,\n        setGenresListAction,\n        setMoviesCopyAction,\n    //Page Params\n        setCurrentPageListAction\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )(NavBarContainer);","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nclass Pagination extends React.Component{\n\nasync paginationControl(pageNumbers, direction){\n    const { currentPageList } = this.props;\n    if(pageNumbers.next > currentPageList[4] && direction === 'NEXT' ){\n        let pageListUpdate = [];\n        for(let index in currentPageList){ \n            pageListUpdate.push( currentPageList[index] + 5 )\n        }\n        await this.props.setCurrentPageListAction(pageListUpdate);\n    }else if( pageNumbers.prev < currentPageList[0] && direction === 'PREV'){\n        let pageListUpdate = [];\n        for(let index in currentPageList){ \n            pageListUpdate.push( currentPageList[index] - 5 )\n        }\n        await this.props.setCurrentPageListAction(pageListUpdate);\n    }\n}\npagePrev(pageNumbers){\n    const prev = 'PREV';\n    this.props.paginate(pageNumbers.prev);\n    this.paginationControl(pageNumbers, prev);\n}\npageNext(pageNumbers){\n    const next = 'NEXT';\n    console.log(pageNumbers.next)\n    this.props.paginate(pageNumbers.next);\n    this.paginationControl(pageNumbers, next);\n}\nrender(){\n    const pageNumbers = {\n        'prev': this.props.page === 0 ? this.props.page : this.props.page -1,\n        'current': this.props.page ,\n        'next': this.props.page +1,\n        'mid': this.props.page +2,\n    }; \n    const { currentPageList } = this.props;\n\n    return (\n        <div>\n            <div className='pagination'>\n                \n                <div className='listOfPage'>\n                    <a className=\"pageLink prevButton\"\n                       key=\"prevPage\"\n                       onClick={(e)=>{ e.preventDefault();\n                        pageNumbers.prev === 0 ? console.log('min') : this.pagePrev(pageNumbers)}}>Prev</a>\n\n                    {\n                        currentPageList.map((page)=>{\n                            return <a className={page === pageNumbers.current ? 'pageLink currentPageActive' : 'pageLink'}\n                                       key={page}\n                                        onClick={(e)=>{ e.preventDefault();\n                             this.props.paginate(page)}}>     {page}   </a>\n                        })\n                    }\n                    \n                    <a className=\"pageLink nextButton\"\n                        key=\"nextPage\" \n                        onClick={(e)=>{ e.preventDefault(); this.pageNext(pageNumbers) }}>Next</a>\n                </div> \n                \n            </div>\n        </div>\n    )\n}\n}\n\nexport default Pagination;","import React from 'react';\n\n\nclass Similar extends React.Component{ \n    render(){\n        const { similar } = this.props\n        return(\n            <div className=\"Similar\">\n                <h3>Similar movies</h3>\n\n                { similar.map( (item, index) =>(\n                    item ? <button key={item.id}\n                                    type=\"button\"\n                                    onClick={()=>{this.props.searchingSimilar(item.title)}}> {item.title} </button> \n                        : <p className=\"similarNotFound\" key={index}>Not found</p> ))}\n            </div>\n        )\n    }\n}\n\nexport default Similar;","/* eslint-disable jsx-a11y/iframe-has-title */\nimport React from 'react';\n\nclass VideoPlayeer extends React.Component{\nconstructor(props){\n    super(props);\n    this.preloaderRef = React.createRef();\n    this.customModalWindowRef = React.createRef();\n    this.overlayRef = React.createRef();\n}\npreloader(){\n    setTimeout( ()=>{\n        if(this.preloaderRef.current){\n            this.preloaderRef.current.style.opacity = '0';\n            this.preloaderRef.current.style.visibility = 'hidden';\n        }\n    }, 300 )\n};\nopenYoutubePlayeer(){\n    this.overlayRef.current.style.display = 'block';\n    setTimeout( ()=>{\n        this.customModalWindowRef.current.style.display = 'block';\n        this.customModalWindowRef.current.style.opacity = '1';\n        if(this.props.trailer){\n            this.customModalWindowRef.current.childNodes[1].src = 'https://www.youtube.com/embed/' + \n                                                                    this.props.trailer.slice(27, this.props.trailer.length) + \n                                                                    '?version=3&autoplay=1&enablejsapi=1&start=0&controls=2'\n        }\n    }, 500 )\n}\ncloseButton(){\n    this.customModalWindowRef.current.style.display = 'none';\n    this.customModalWindowRef.current.style.opacity = '0';\n    this.overlayRef.current.style.display = 'none';\n    if(this.props.trailer){\n        this.customModalWindowRef.current.childNodes[1].src = '';\n    }\n}\n\n    render(){\n        return(\n            <div>\n                <div className=\"moviePoster\">\n                    <div className=\"preloader\" ref={this.preloaderRef}>\n                        <div className=\"loader\"></div>\n                    </div>\n                    <button className=\"play-button\"\n                            onClick={ ()=>{this.openYoutubePlayeer()} }>\n                    </button>\n                    <img onLoad={ (e)=>{ this.preloader(e.target)}}\n                        className={this.props.conditionClassName}\n                        src={this.props.conditionUrl}\n                        alt = 'Poster for film' />\n                </div>\n                <div className=\"modal-window-for-trailer\"\n                    ref={ this.customModalWindowRef }>\n                    <button onClick={()=>{this.closeButton()}}  className=\"closeButton\">X</button>\n                    { this.props.trailer ? <iframe id=\"ytplayer\" \n                            type=\"text/html\" \n                            width=\"960\" \n                            height=\"540\"\n                            src={'https://www.youtube.com/embed/' + \n                                    this.props.trailer.slice(27, this.props.trailer.length) + \n                                    '?version=3&autoplay=1&enablejsapi=1&start=0&controls=2' }\n                            frameBorder=\"0\"\n                            allowFullScreen/> : <h2 className=\"trailerNotFound\">Sorry, trailer not found</h2> }\n                </div>\n                <div className=\"overlay\" ref={this.overlayRef}></div>\n            </div>\n        )\n    }\n}\n\n\n\n\nexport default VideoPlayeer;","import React from 'react';\n\nclass MovieInfo extends React.Component{\n    render(){\n        const rateOthers = this.props.rateOthers;\n        const rateIMDB = this.props.rateIMDB;\n        let rateVerified;\n        if(rateOthers){\n            rateVerified = rateOthers;\n        }else{\n            rateVerified = [];\n        }\n        return(\n            <div className=\"movieInfo\">\n                <h4>{ this.props.year }</h4>\n                <h4>{ this.props.country }</h4>\n                <p>IMDB:  {rateIMDB ? rateIMDB : 'Searching..'}</p>\n                <p>\n                   {rateVerified[1] ? rateVerified[1].Source +': '+ rateVerified[1].Value : 'Not found'}\n                </p>\n                <p>\n                    {rateVerified[2] ? rateVerified[2].Source +': '+ rateVerified[2].Value : 'Not found'}\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default MovieInfo;","/* eslint-disable react/jsx-no-comment-textnodes */\nimport React from 'react';\nimport { conditionImg } from '../helpFun/conditionImg';\nimport Similar from './similar';\nimport VideoPlayeer from './videoPlayeer';\nimport MovieInfo from './movieInfo'\n\nclass Movie extends React.Component{\nrender(){\n    const { film } = this.props;\n    const [ conditionUrl, conditionClassName ] = conditionImg(film.poster);\n    return(\n        <div className=\"OneOfMovie\">\n            \n            <VideoPlayeer trailer = { film.trailer }\n                          conditionClassName = { conditionClassName }\n                          conditionUrl = { conditionUrl } />\n\n            <div className=\"movieTitle\">\n                <h2>{film.title}</h2>\n            </div>\n\n            <MovieInfo  year = { film.year }\n                        country = { film.country }\n                        rateIMDB = { film.rateIMDB }\n                        rateOthers = { film.rateOthers }   />\n\n            <Similar similar={ film.similar }\n                     searchingSimilar = {this.props.searchingSimilar}    />\n\n        </div>\n    )\n}}\n\n\nexport default Movie;","import error from '../../img/error.svg'\n\n\nexport const conditionImg = (url)=>{\n    if(url === '' || url === '720.jpg'){\n        const conditionUrl = error;\n        const conditionClassName = 'moviePosterError';\n        return [conditionUrl, conditionClassName ];\n    }else{\n        const conditionUrl = url;\n        const conditionClassName = 'moviePosterImg';\n        return [conditionUrl, conditionClassName];\n    }\n}","import React from 'react';\nimport Movie from './movie';\n\n\nclass ListMovies extends React.Component{\n render(){\n    return(\n        <div>\n            {\n                this.props.movies.map( (film, index) => {\n                    return <Movie film = { film } \n                                  key = { index }\n                                  searchingSimilar = {this.props.searchingSimilar}   />\n                        })\n            }\n        </div>\n    )\n  }\n}\nexport default ListMovies;","import React from 'react';\nimport Pagination from './pagination.jsx'\nimport { connect } from 'react-redux';\nimport ListMovies from './listMovies';\nimport error from '../../img/error.svg';\nimport logo from '../../img/logoMSND.svg';\nimport { getAndBuildAllData } from '../helpFun';\n//Search Params\nimport { \n    setTitleAction,\n    setYearAction,\n    setGenreAction,\n    setSortAction,\n    setPageAction,\n    setLoadStatusAction,\n } from '../../redux/searchParams/actions';\n\n //Lists\nimport { \n    setMoviesAction,\n    setMoviesCopyAction,\n } from '../../redux/lists/actions';\n//Page params\nimport { setCurrentPageListAction } from '../../redux/pageParams/actions'\n\nclass  MovieContainer extends React.Component{\nrender() {\nconst paginate = async (pageNumber)=>{\n    this.props.setLoadStatusAction(false);\n    await this.props.setPageAction(pageNumber);\n    const {title, year, currentGenre, page} = this.props;\n    const resultConstructor = await getAndBuildAllData( title, year, currentGenre, page );\n    this.props.setMoviesAction(resultConstructor);\n    this.props.setLoadStatusAction(true);\n} \nconst searchingSimilar = async(e)=>{\n    await this.props.setTitleAction(e);\n    await this.props.setYearAction('');\n    await this.props.setGenreAction('')\n    paginate(1);\n} \nconst { title, movies, status } = this.props;\n\nconst conditionRenderByResult = ()=>{\n    if( title !== '' && movies.length === 0 && status){\n            return (\n                <div className=\"noResultBySearch\">\n                    <h1>{title} - Not found</h1>\n                    <h3>¯\\_(ツ)_/¯</h3>\n                    <img src={error} alt='not found'/>\n                </div>\n            )\n    }else{\n        return (\n            <div className=\"wrap-for-content\">\n                <div className={ status? \"loadingLine\" : \"loadingLine loadingLineActive\"}></div>\n\n                {this.props.movies.length < 1 ? \n                    <div className=\"wrap-logo\">\n                        <div className={ status? 'loading' : 'loading loading-active'}></div>\n                        <img src={logo} alt=\"LOGO\" className={ status? 'welcome-logo' : 'welcome-logo welcome-logo-loading'}/>\n                    </div> \n                        : <ListMovies movies={ movies }\n                                      searchingSimilar = {searchingSimilar}   />}\n\n                {this.props.movies.length < 1 ? <div></div> : <Pagination paginate = { paginate }\n                                                                        page = { this.props.page}\n                                                                        movies = { movies }\n                                                                        setCurrentPageListAction = { this.props.setCurrentPageListAction }\n                                                                        currentPageList = { this.props.currentPageList }    />}   \n                <div className=\"personalSign\">\n                    <p>Created by Victor Ryabkov</p>\n                </div>\n            </div>\n        )\n    }\n}\n    return(\n            <div> { conditionRenderByResult() } </div>\n    )\n}}\n\nconst mapStateToProps = state =>{\nreturn {\n    //Search Params\n        title: state.searchParams.title,\n        year: state.searchParams.year,\n        currentGenre: state.searchParams.genre,\n        sort: state.searchParams.sort,\n        page: state.searchParams.page,\n        status: state.searchParams.status,\n    //Lists\n        movies: state.lists.movies,\n        genres: state.lists.genres,\n    //Page Params\n        currentPageList: state.pageParams.currentPageList,\n};\n};\nconst mapDispatchToProps = {\n    //Search Params\n        setTitleAction,\n        setYearAction,\n        setGenreAction,\n        setSortAction,\n        setPageAction,\n        setLoadStatusAction,\n    //Lists\n        setMoviesAction,\n        setMoviesCopyAction,\n    //Page Params\n        setCurrentPageListAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer)","import React from 'react';\nimport './App.css';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './redux/reducers';\nimport NavBarContainer from './components/navBar';\nimport MovieContainer from './components/items';\n\n\nconst store = createStore(rootReducer);\n\n\n\nclass App extends React.Component{\nrender(){\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        <NavBarContainer />\n        <MovieContainer />\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}